# This file is automatically generated by the rmf-codegen project.
#
# The Python code generator is maintained by Lab Digital. If you want to
# contribute to this project then please do not edit this file directly
# but send a pull request to the Lab Digital fork of rmf-codegen at
# https://github.com/labd/rmf-codegen
import typing
import warnings

from ...models.common import ProcessingState
from ...models.importoperations import ImportOperationPagedResponse

if typing.TYPE_CHECKING:
    from ...base_client import BaseClient


class ByProjectKeyImportContainersByImportContainerKeyImportOperationsRequestBuilder:
    _client: "BaseClient"
    _project_key: str
    _import_container_key: str

    def __init__(
        self,
        project_key: str,
        import_container_key: str,
        client: "BaseClient",
    ):
        self._project_key = project_key
        self._import_container_key = import_container_key
        self._client = client

    def get(
        self,
        *,
        limit: float = None,
        offset: float = None,
        sort: typing.List["str"] = None,
        resource_key: str = None,
        state: "ProcessingState" = None,
        debug: bool = None,
        headers: typing.Dict[str, str] = None,
        options: typing.Dict[str, typing.Any] = None,
    ) -> "ImportOperationPagedResponse":
        """Retrieves all [ImportOperations](ctp:import:type:ImportOperation) of a given ImportContainer key."""
        headers = {} if headers is None else headers
        response = self._client._get(
            endpoint=f"/{self._project_key}/import-containers/{self._import_container_key}/import-operations",
            params={
                "limit": limit,
                "offset": offset,
                "sort": sort,
                "resourceKey": resource_key,
                "state": state,
                "debug": debug,
            },
            headers=headers,
            options=options,
        )
        if response.status_code == 200:
            return ImportOperationPagedResponse.deserialize(response.json())
        warnings.warn("Unhandled status code %d" % response.status_code)
