# This file is automatically generated by the rmf-codegen project.
#
# The Python code generator is maintained by Lab Digital. If you want to
# contribute to this project then please do not edit this file directly
# but send a pull request to the Lab Digital fork of rmf-codegen at
# https://github.com/labd/rmf-codegen
import typing
import warnings

from ...models.customer import CustomerSignInResult
from ...models.me import MyBusinessUnitAssociateDraft

if typing.TYPE_CHECKING:
    from ...base_client import BaseClient


class ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder:
    _client: "BaseClient"
    _project_key: str
    _business_unit_key: str

    def __init__(
        self,
        project_key: str,
        business_unit_key: str,
        client: "BaseClient",
    ):
        self._project_key = project_key
        self._business_unit_key = business_unit_key
        self._client = client

    def post(
        self,
        body: "MyBusinessUnitAssociateDraft",
        *,
        headers: typing.Dict[str, str] = None,
        options: typing.Dict[str, typing.Any] = None,
    ) -> "CustomerSignInResult":
        """The My Business Unit endpoint does not support assigning existing Customers to a Business Unit.
        Associates with the `UpdateAssociates` [Permission](ctp:api:type:Permission) can use this endpoint to create a new Customer and associate it with the Business Unit.
        If the required [Permission](/projects/associate-roles#permission) is missing, an [AssociateMissingPermission](/errors#associatemissingpermission) error is returned.
        The new Associate is created with an empty set of roles.

        """
        headers = {} if headers is None else headers
        response = self._client._post(
            endpoint=f"/{self._project_key}/in-business-unit/key={self._business_unit_key}/me/customers",
            params={},
            json=body.serialize(),
            headers={"Content-Type": "application/json", **headers},
            options=options,
        )
        if response.status_code in (201, 200):
            return CustomerSignInResult.deserialize(response.json())
        warnings.warn("Unhandled status code %d" % response.status_code)
