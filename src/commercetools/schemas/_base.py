# DO NOT EDIT! This file is automatically generated

import marshmallow

from commercetools import types

__all__ = ["PagedQueryResponseSchema", "UpdateActionSchema", "UpdateSchema"]


class PagedQueryResponseSchema(marshmallow.Schema):
    "Marshmallow schema for :class:`commercetools.types.PagedQueryResponse`."
    count = marshmallow.fields.Integer(allow_none=True)
    total = marshmallow.fields.Integer(allow_none=True, missing=None)
    offset = marshmallow.fields.Integer(allow_none=True)
    results = marshmallow.fields.Nested(
        nested="commercetools.schemas._common.ResourceSchema",
        unknown=marshmallow.EXCLUDE,
        allow_none=True,
        many=True,
    )

    class Meta:
        unknown = marshmallow.EXCLUDE

    @marshmallow.post_load
    def post_load(self, data):
        return types.PagedQueryResponse(**data)


class UpdateActionSchema(marshmallow.Schema):
    "Marshmallow schema for :class:`commercetools.types.UpdateAction`."
    action = marshmallow.fields.String(allow_none=True)

    class Meta:
        unknown = marshmallow.EXCLUDE

    @marshmallow.post_load
    def post_load(self, data):
        return types.UpdateAction(**data)


class UpdateSchema(marshmallow.Schema):
    "Marshmallow schema for :class:`commercetools.types.Update`."
    version = marshmallow.fields.Integer(allow_none=True)
    actions = marshmallow.fields.List(
        marshmallow.fields.Nested(
            nested="commercetools.schemas._base.UpdateActionSchema",
            unknown=marshmallow.EXCLUDE,
            allow_none=True,
        ),
        allow_none=True,
    )

    class Meta:
        unknown = marshmallow.EXCLUDE

    @marshmallow.post_load
    def post_load(self, data):
        return types.Update(**data)
